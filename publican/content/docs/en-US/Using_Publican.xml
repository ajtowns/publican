<?xml version='1.0'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>

<chapter id="chap-Publican-Using_the_publican_package">
	<title>Using the publican package</title>
	<para>
		This chapter describes the process of installing the publican package, creating books, the main configuration files, example book files, and how to build a book.
	</para>
	<section id="sect-Publican-Using_the_publican_package-Installing_publican">
		<title>Installing publican</title>
		<para>
			To install publican:
		</para>
		<orderedlist>
			<listitem>
				<para>
					Change to the root user:
				</para>
				<para>
<screen>
$ su -
Password:
</screen>
				</para>
			</listitem>
			<listitem>
				<para>
					Run the following command to install the publican package:
				</para>
				<para>
<screen>
# yum install publican
</screen>
				</para>
			</listitem>
		</orderedlist>
		<para>
			As well, there are three branded publican packages available: redhat, fedora and jboss. Run the following command as the root user to build branded books:
		</para>
<screen>
# yum install publican-<replaceable>brand</replaceable>
</screen>
		<para>
			Replace <replaceable>brand</replaceable> with redhat, fedora, or jboss.
		</para>
	</section>
	
	<section id="sect-Publican-Using_the_publican_package-Creating_a_Book">
		<title>Creating a Book</title>
		<para>
			Use the <command>create_book</command> command to create a new book. The <command>create_book</command> command creates all the necessary files to create a book.
		</para>
		<para>
			The following is a list of valid options for the <command>create_book</command> command. Append these options to the end of the <command>create_book</command> command. For example, <command>create_book -help</command>, <command>create_book --name New_Book</command>, and so on:
		</para>
		<variablelist>
			<varlistentry>
				<term><filename>-help</filename></term>
				<listitem>
					<para>
						print a list of all <command>create_book</command> command options.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>-man</filename></term>
				<listitem>
					<para>
						view the publican manual page. The manual page contains the same information returned by the <command>create_book -help</command> command.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>--name<replaceable> Book_Name</replaceable></filename></term>
				<listitem>
					<para>
						replace <replaceable>Book_Name</replaceable> with the name of the book or article. This variable must not contain any spaces. For example, running the <command>create_book --name Test_Book</command> command creates a book named Test_Book, and all the necessary files to build the book. This updates the <filename>Makefile</filename> with the correct <computeroutput>DOCNAME</computeroutput>, and the <filename><replaceable>Book_Name</replaceable>.ent</filename> file with the correct <computeroutput>BOOKID</computeroutput>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>--version<replaceable> version</replaceable></filename></term>
				<listitem>
					<para>
						replace <replaceable>version</replaceable> with the version number of the book. The default version is 0.1. Using <command>--version <replaceable> version</replaceable></command> updates the <computeroutput>&lt;issuenum&gt;&lt;/issuenum&gt;</computeroutput> tags in the <filename>Book_Info.xml</filename> file.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>--revision<replaceable> revision</replaceable></filename></term>
				<listitem>
					<para>
						replace <replaceable> revision</replaceable> with the revision number of the book. The default value is 0. Using <command>--revision<replaceable> revision</replaceable></command> updates the <computeroutput>&lt;productnumber&gt;&lt;/productnumber&gt;</computeroutput> tags in the <filename>Book_Info.xml</filename> file.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>--product<replaceable> Product_Name</replaceable></filename></term>
				<listitem>
					<para>
						replace <replaceable> Product_Name</replaceable> with the product name. This variable must not contain any spaces. Set this to <computeroutput>Fedora</computeroutput> for core Fedora documentation, and the name of the product for other products, for example, <computeroutput>Fedora_Directory_Server</computeroutput>. The <command>--product<replaceable> Product_Name</replaceable></command> option updates the <filename>Makefile</filename> and the <filename><replaceable>Book_Name</replaceable>.ent</filename> file with the correct product name.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>--article --name<replaceable> Article_Name</replaceable></filename></term>
				<listitem>
					<para>
						create an article instead of a book. Replace <replaceable> Article_Name</replaceable> with the article name. This variable must not contain any spaces.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>--brand <replaceable>brand</replaceable></filename></term>
				<listitem>
					<para>
						replace <replaceable>brand</replaceable> with RedHat, fedora, or JBoss. This requires the appropriate publican package to be installed. For example, to build Red Hat branded books, you must install the publican-redhat package. See <xref linkend="sect-Publican-Using_the_publican_package-Installing_publican" /> for instructions on installing the branded publican packages. If no brand is specified, the default brand is used.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>
			Before running the <command>create_book</command> command, use the <command>cd</command> command to change into the directory where you want the book to be created. For example, to create a book named Test_Book in the <filename>/my/books/</filename> directory, run the following commands:
		</para>
		<para>
<screen>
cd /my/books/
</screen>
		</para>
		<para>
<screen>
create_book --name Test_Book
</screen>
		</para>
	</section>
	
	<section id="sect-Publican-Using_the_publican_package-Files_in_the_Book_directory">
		<title>Files in the Book directory</title>
		<formalpara id="form-Publican-Files_in_the_Book_directory-Directory_Structure">
			<title>Directory Structure</title>
			<para>
				Running the <command>create_book --name <replaceable>Book_Name</replaceable></command> command will create a directory structure and the required files, similar to the following:
			</para>
		</formalpara>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="./images/directory_structure.png" format="PNG" />
				</imageobject>
			</mediaobject>
		</para>
		<section id="sect-Publican-Files_in_the_Book_directory-The_Makefile">
			<title>The <filename>Makefile</filename></title>
			<para>
				The <filename>Makefile</filename> is used to configure build options, and is located in the root of the book directory. The following is an example <filename>Makefile</filename>, with instructions following afterwards:
			</para>
<screen>
XML_LANG        = en-US
DOCNAME         = Test_Name
PRODUCT         = Test_Product
BRAND		= RedHat
	
#OTHER_LANGS    = as-IN bn-IN de-DE es-ES fr-FR gu-IN hi-IN
TRANSLATIONS    = $(XML_LANG) $(OTHER_LANGS)
	
COMMON_CONFIG   = /usr/share/publican
include $(COMMON_CONFIG)/make/Makefile.common
</screen>
			<variablelist>
				<varlistentry>
					<term><filename>XML_LANG</filename></term>
					<listitem>
						<para>
							set this to the language of the source xml files, for example, <computeroutput>en-US</computeroutput>.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>DOCNAME</filename></term>
					<listitem>
						<para>
							this must be set to the same name as the main book file, <filename><replaceable>Book_Name</replaceable>.xml</filename>, otherwise the book will not build. This variable must not contain any spaces.
						</para>
						<para>
							Running the <command>create_book --name <replaceable>Book_Name</replaceable></command> command correctly configures the <computeroutput>DOCNAME</computeroutput>.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>PRODUCT</filename></term>
					<listitem>
						<para>
							the product the book is associated with. This variable must not contain any spaces. Set this to <computeroutput>Fedora</computeroutput> for core Fedora documentation. For other documentation, this will be the product, for example, <computeroutput>Fedora_Directory_Server</computeroutput>.
						</para>
						<para>
							Running the <command>create_book --name <replaceable>Book_Name</replaceable> --product <replaceable>Product_Name</replaceable></command> command correctly configures the <computeroutput>PRODUCT</computeroutput>.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>BRAND</filename></term>
					<listitem>
						<para>
							set the brand of the book. Accepted values are <computeroutput>RedHat</computeroutput>, <computeroutput>fedora</computeroutput>, and <computeroutput>JBoss</computeroutput>. If no brand is specified, the default brand is used.
						</para>
						<para>
							Running the <command>create_book --name <replaceable>Book_Name</replaceable> --brand <replaceable>brand</replaceable></command> command correctly configures the <computeroutput>BRAND</computeroutput>.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>TRANSLATIONS</filename></term>
					<listitem>
						<para>
							list of language locales to build the book in. Specify additional languages using <filename>OTHER_LANGS</filename>, then add <filename>$(OTHER_LANGS)</filename> to <filename>TRANSLATIONS</filename>.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>OTHER_LANGS</filename></term>
					<listitem>
						<para>
							space-separated list of other language locales. Used to specify other language locales to build the book in.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<para>
				The following is an example <filename>Makefile</filename> that includes translations:
			</para>
			<para>
<screen>
XML_LANG       = en-US
DOCNAME        = Test_Name
PRODUCT        = Test Product
BRAND	       = RedHat

OTHER_LANGS    = as-IN bn-IN de-DE es-ES fr-FR gu-IN hi-IN it-IT ja-JP kn-IN
ko-KR ml-IN mr-IN or-IN pa-IN pt-BR ru-RU si-LK ta-IN te-IN zh-CN zh-TW
TRANSLATIONS   = $(XML_LANG) $(OTHER_LANGS)
	
COMMON_CONFIG  = /usr/share/publican
include $(COMMON_CONFIG)/make/Makefile.common
</screen>
			</para>
			<para>
				Note: <computeroutput>OTHER_LANGS</computeroutput> is no longer commented out.
			</para>
			<tip>
				<title><command>make help_params</command></title>
				<para>
					Run the <command>make help_params</command> command in the root directory of a book for a full list of parameters that can be set in the <filename>Makefile</filename>.
				</para>
			</tip>
		</section>
		
		<section id="sect-Publican-Files_in_the_Book_directory-Book_Info.xml">
			<title>Book_Info.xml</title>
			<para>
				The <filename>Book_Info.xml</filename> file is used to set the book ID, title, subtitle, issue and product numbers, and an abstract which appears at the start of the book. The following is an example <filename>Book_Info.xml</filename> file for the Test_Book book, with instructions following afterwards:
			</para>
<programlisting>
&lt;?xml version=&#39;1.0&#39;?&gt;
&lt;!DOCTYPE bookinfo PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]&gt;

&lt;bookinfo id="Test_Book-Product_Name_and_Version"&gt;
	&lt;title&gt;Product Name and Version&lt;/title&gt;
	&lt;subtitle&gt;Test Book&lt;/subtitle&gt;
	&lt;issuenum&gt;0.0&lt;/issuenum&gt;
	&lt;productnumber&gt;0&lt;/productnumber&gt;
	&lt;abstract&gt;&lt;para&gt;This book is about... (Be brief; this para is used for the RPM spec
	file)&lt;/para&gt;
	&lt;/abstract&gt;
	&lt;corpauthor&gt;
		&lt;inlinemediaobject&gt;
			&lt;imageobject&gt;
				&lt;imagedata fileref="Common_Content/images/title_logo.png" /&gt;
			&lt;/imageobject&gt;
		&lt;/inlinemediaobject&gt;
	&lt;/corpauthor&gt;
	&lt;copyright&gt;
		&lt;year&gt;&amp;YEAR&semi;&lt;/year&gt;
		&lt;holder&gt;&amp;HOLDER&semi;&lt;/holder&gt;
	&lt;/copyright&gt;
	&lt;xi:include href="Common_Content/Legal_Notice.xml" xmlns:xi="http://www.w3.org/2001/XInclude" /&gt;
	&lt;xi:include href="Author_Group.xml" xmlns:xi="http://www.w3.org/2001/XInclude" /&gt;
&lt;/bookinfo&gt;
</programlisting>
			<variablelist>
				<varlistentry>
					<term><filename>&lt;bookinfo id="<replaceable>book_id</replaceable>"&gt;</filename></term>
					<listitem>
						<para>
							replace <replaceable>book_id</replaceable> with an ID for the book; however, if you run the <command>make clean_ids</command> command, this ID along with all other IDs will be changed to a <replaceable>Book_Name-Title</replaceable> format, where "Title" is the title of the article, book, section, or chapter.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;title&gt;<replaceable>title</replaceable>&lt;/title&gt;</filename></term>
					<listitem>
						<para>
							replace <replaceable>title</replaceable> with the title of the book. Remove the <computeroutput>&lt;title&gt;</computeroutput> tags to remove the title.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;subtitle&gt;<replaceable>subtitle</replaceable>&lt;/subtitle&gt;</filename></term>
					<listitem>
						<para>
							replace <replaceable>subtitle</replaceable> with the subtitle of the book. The subtitle will appear under the title when the book is built. Remove the <computeroutput>&lt;subtitle&gt;</computeroutput> tags to remove the subtitle. A subtitle is required to build an RPM. When building a book as an RPM the subtitle is used as the <computeroutput>Summary</computeroutput> in the RPM spec file.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;issuenum&gt;<replaceable>issue-number</replaceable>&lt;/issuenum&gt;</filename></term>
					<listitem>
						<para>
							replace <replaceable>issue-number</replaceable> with the issue number. The issue number changes the version number (the first two digits) when building a book with the <command>tar</command> or <command>srpm</command> options. For example, setting the issue number to <filename>1.2</filename> and building the book using the <command>make srpm</command> command, would create an RPM file named <filename><replaceable>PRODUCT</replaceable>-<replaceable>DOCNAME</replaceable>-1.2-0.src.rpm</filename>. <replaceable>PRODUCT</replaceable> and <replaceable>DOCNAME</replaceable> are configured in the <filename>Makefile</filename>.
						</para>
						<para>
							Running the <command>create_book --name <replaceable> Book_Name</replaceable> --version <replaceable>version</replaceable></command> command correctly configures the issue number.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;productnumber&gt;<replaceable>product-number</replaceable>&lt;/productnumber&gt;</filename></term>
					<listitem>
						<para>
							replace <replaceable>product-number</replaceable> with the product number. The product number changes the release number (the last digit) when building a book with the <filename>tar</filename> or <filename>srpm</filename> options. For example, setting the product number to <filename>1</filename> and building the book using the <command>make srpm</command> command, would create an RPM file named <filename><replaceable>PRODUCT</replaceable>-<replaceable>DOCNAME</replaceable>-0.0-1.src.rpm</filename>. <replaceable>PRODUCT</replaceable> and <replaceable>DOCNAME</replaceable> are configured in the <filename>Makefile</filename>.
						</para>
						<para>
							Running the <command>create_book --name<replaceable> Book_Name</replaceable> --revision <replaceable>revision</replaceable></command> command correctly configures the product number.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;abstract&gt;&lt;para&gt;<replaceable>abstract</replaceable>&lt;/para&gt;&lt;/abstract&gt;</filename></term>
					<listitem>
						<para>
							replace <replaceable>abstract</replaceable> with the abstract for the book. The abstract appears before the table of contents when using HTML, and on the second page when using PDF. When building a book as an RPM the abstract is used as the <computeroutput>description</computeroutput> in the RPM spec file.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;year&gt;&amp;YEAR&semi;&lt;/year&gt;</filename></term>
					<listitem>
						<para>
							The <filename>&amp;YEAR&semi;</filename> entity is defined in <filename><replaceable>Book_Name</replaceable>.ent</filename>. Use this to set the copyright year of the book. Refer to <xref linkend="sect-Publican-Files_in_the_Book_directory-Book_Name.ent" /> for configuration details.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;holder&gt;&amp;HOLDER&semi;&lt;/holder&gt;</filename></term>
					<listitem>
						<para>
							The <filename>&amp;HOLDER&semi;</filename> entity is defined in <filename><replaceable>Book_Name</replaceable>.ent</filename>. Use this to set the copyright holder of the book. Refer to <xref linkend="sect-Publican-Files_in_the_Book_directory-Book_Name.ent" /> for configuration details. The copyright section is not required.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</section>
		
		<section id="sect-Publican-Files_in_the_Book_directory-Author_Group.xml">
			<title>Author_Group.xml</title>
			<para>
				Use the <filename>Author_Group.xml</filename> file to configure author details. This file is not required. The following is an example <filename>Author_Group.xml</filename> file:
			</para>
<screen>
&lt;?xml version=&#39;1.0&#39;?&gt;
&lt;!DOCTYPE authorgroup PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
		  ]&gt;

&lt;authorgroup&gt;
	&lt;corpauthor&gt;
		     Red Hat Documentation Group
 	&lt;/corpauthor&gt;
	&lt;author&gt;
		&lt;firstname&gt;Murray&lt;/firstname&gt;
	 	&lt;surname&gt;McAllister&lt;/surname&gt;
		&lt;affiliation&gt;
		     &lt;orgname&gt;Red Hat&lt;/orgname&gt;
		     &lt;orgdiv&gt;Engineering Content Services&lt;/orgdiv&gt;
		&lt;/affiliation&gt;
		&lt;email&gt;mmcallis@redhat.com&lt;/email&gt;
	&lt;/author&gt;
&lt;/authorgroup&gt;
</screen>
			<para>
				The <filename>Author_Group.xml</filename> file does not have to contain all of the above information: include as much or as little as required. The above <filename>Author_Group.xml</filename> file will create the following HTML output on the first page of the book:
			</para>
			<para>
				<mediaobject>
					<imageobject>
						<imagedata fileref="./images/author_group.png" format="PNG" />
					</imageobject>
				</mediaobject>
			</para>
			<para>
				Delete the following line from the <filename>Book_Info.xml</filename> file to remove the author information:
			</para>
<screen>
&lt;xi:include href="Author_Group.xml" xmlns:xi="http://www.w3.org/2001/XInclude" /&gt;
</screen>
		</section>
		
		<section id="sect-Publican-Files_in_the_Book_directory-Chapter.xml">
			<title>Chapter.xml</title>
			<para>
				The <filename>Chapter.xml</filename> file is a template for creating chapter files. Chapter files contain the content that make up a book. The following is a chapter template (<filename>Chapter.xml</filename>) that is created after running the <command>create_book</command> command. Note the <filename>DOCTYPE</filename> is set to <filename>chapter</filename>:
			</para>
<screen>
&lt;?xml version=&#39;1.0&#39;?&gt;
&lt;!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]&gt;
	
&lt;chapter id="Test_Book-Test"&gt;&gt;
	&lt;title&gt;Test&lt;/title&gt;
	&lt;para&gt;
		A test paragraph.
	&lt;/para&gt;
	&lt;section id="Test_Book-Test-Section_1_Test"&gt;
		&lt;title&gt;Section 1 Test&lt;/title&gt;
		&lt;para&gt;
			A paragraph in section 1.
		&lt;/para&gt;
	&lt;/section&gt;
	
	&lt;section id="Test_Book-Test-Section_2_Test"&gt;
		&lt;title&gt;Section 2 Test&lt;/title&gt;
		&lt;para&gt;
			A paragraph in section 2.
		&lt;/para&gt;
	&lt;/section&gt;
	
&lt;/chapter&gt;
</screen>
			<para>
				This chapter has two sections, <filename>Section 1 Test</filename> and <filename>Section 2 Test</filename>. Please refer to <ulink url="http://docbook.org/tdg/en/html/chapter.html"></ulink> for further information about chapters.
			</para>
			<note>
				<title>Note</title>
				<para>
					The chapter file should be renamed to something significant to the subject of the chapter. For example, a file on installing a product might be named <filename>Installation.xml</filename>, whereas a file on how to setup a piece of software might be renamed to <filename>Setup.xml</filename> or <filename>Configuration.xml</filename>.
				</para>
			</note>
		</section>
		
		<section id="sect-Publican-Files_in_the_Book_directory-Book_Name.xml">
			<title><replaceable>Book_Name</replaceable>.xml</title>
			<para>
				The <filename><replaceable>Book_Name</replaceable>.xml</filename> file contains <filename>xi:include</filename> directives to include the chapters for a book. Chapters are contained in separate XML files, and the <filename><replaceable>Book_Name</replaceable>.xml</filename> file brings them together into a single book.
			</para>
			<para>
				The following is an example <filename><replaceable>Book_Name</replaceable>.xml</filename> file. Note the <filename>DOCTYPE</filename> is set to <filename>book</filename>:
			</para>
<screen>
&lt;?xml version=&#39;1.0&#39;?&gt;
&lt;!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
		]&gt;

&lt;book&gt;
	&lt;xi:include href="Book_Info.xml" xmlns:xi="http://www.w3.org/2001/XInclude" /&gt;
	&lt;xi:include href="Chapter1.xml" xmlns:xi="http://www.w3.org/2001/XInclude" /&gt;
	&lt;xi:include href="Chatper2.xml" xmlns:xi="http://www.w3.org/2001/XInclude" /&gt;
	&lt;xi:include href="Chapter3.xml" xmlns:xi="http://www.w3.org/2001/XInclude" /&gt;
	
&lt;/book&gt;
</screen>
			<para>
				This example loads the <filename>Book_Info.xml</filename> file, and the <filename>Chapter1.xml</filename>, <filename>Chapter2.xml</filename>, and <filename>Chapter3.xml</filename> files. Replace the <filename>Chapter<replaceable>X</replaceable>.xml</filename> files with the name of your chapter files.
			</para>
			<para>
				The <filename><replaceable>Book_Name</replaceable>.xml</filename> file is not limited to using <filename>xi:include</filename> directives. Books can be created using a single XML file. The following is an example of a book created using a single XML file:
			</para>
<screen>
&lt;book&gt;

&lt;chapter&gt;
&lt;title&gt;Chapter 1&lt;/title&gt;
	&lt;para&gt;
		A paragraph in Chapter 1.
	&lt;/para&gt;
	&lt;section id="section1"&gt;
	&lt;title&gt;Chapter 1 Section 1&lt;/title&gt;
		&lt;para&gt;
			A paragraph in Section 1.
		&lt;/para&gt;
	&lt;/section&gt;
	&lt;section id="section2"&gt;
	&lt;title&gt;Chapter 1 Section 2&lt;/title&gt;
		&lt;para&gt;
			A paragraph in Section 2.
		&lt;/para&gt;
	&lt;/section&gt;
&lt;/chapter&gt;

&lt;chapter&gt;
&lt;title&gt;Chapter 2&lt;/title&gt;
	&lt;para&gt;
		A paragraph in Chapter 2.
	&lt;/para&gt;
&lt;/chapter&gt;

&lt;/book&gt;
</screen>
			<para>
				This book contains two chapters. Chapter one contains two sections. Please refer to <ulink url="http://docbook.org/tdg/en/html/section.html"></ulink> for further information about sections, and <ulink url="http://docbook.org/tdg/en/html/book.html"></ulink> for further information about books.
			</para>
		</section>
		
		<section id="sect-Publican-Files_in_the_Book_directory-Book_Name.ent">
			<title><replaceable>Book_Name</replaceable>.ent</title>
			<para>
				The <filename><replaceable>Book_Name</replaceable>.ent</filename> file is used to define local entities. You must define <computeroutput>YEAR</computeroutput> and <computeroutput>HOLDER</computeroutput> entities, otherwise the book will not build:
			</para>
			<para>
<screen>
&lt;!ENTITY YEAR "<replaceable>2008</replaceable>"&gt;
&lt;!ENTITY HOLDER "<replaceable>Red Hat, Inc</replaceable>"&gt;
</screen>
			</para>
			<para>
				The <computeroutput>YEAR</computeroutput> and <computeroutput>HOLDER</computeroutput> entities are used for copyright information. Use entities to make writing commonly used terms quicker:
			</para>
			<para>
<screen>
&lt;!ENTITY FDP "Fedora Documentation Project"&gt;
&lt;!ENTITY FDS "Fedora Directory Server"&gt;
</screen>
			</para>
			<para>
				Two entities are defined: <computeroutput>FDP</computeroutput> and <computeroutput>FDS</computeroutput>. Instead of typing <computeroutput>Fedora Documentation Project</computeroutput> you can use <computeroutput>&amp;FDP&semi;</computeroutput>. The build system adds the required entities to the XML files at build time. In the example above, <computeroutput>&amp;FDP&semi;</computeroutput> would be replaced with Fedora Documentation Project.
			</para>
		</section>

	</section>
	
	<section id="sect-Publican-Using_the_publican_package-Adding_Images">
		<title>Adding Images</title>
		<para>
			Use the <filename>images</filename> subdirectory in the <filename>en-<replaceable>US</replaceable>/</filename> directory to store images. Use <computeroutput>./images/<replaceable>image-name</replaceable></computeroutput> to insert images into a book. The following is an example that inserts the <filename>testimage.png</filename> image:
		</para>
		<para>
<screen>
&lt;mediaobject&gt;
	&lt;imageobject&gt;
		&lt;imagedata fileref="./images/testimage.png" /&gt;
	&lt;/imageobject&gt;
&lt;/mediaobject&gt;
</screen>
		</para>
		<para>
			<warning>
				<title>Image File Locations</title>
				<para>
					The build system will only use images in the <filename>en-<replaceable>US</replaceable>/images</filename> subdirectory. Other directories will not work.
				</para>
			</warning>
		</para>
	</section>
	
	<section id="sect-Publican-Using_the_publican_package-Building_a_Book">
		<title>Building a Book</title>
		<para>
			To build a book:
		</para>
		<orderedlist>
			<listitem>
				<para>
					Confirm the <computeroutput>YEAR</computeroutput> and <computeroutput>HOLDER</computeroutput> entities have been configured in the <filename><replaceable>Book_Name</replaceable>.ent</filename> file, as per <xref linkend="sect-Publican-Files_in_the_Book_directory-Book_Name.ent" />.
				</para>
			</listitem>
			<listitem>
				<para>
					Change into the root directory of the book. For example, if the book was named <computeroutput>Test_Book</computeroutput> and was located in the <filename>/books/</filename> directory, run the following command:
				</para>
				<para>
<screen>
cd <replaceable>/books/Test_Book</replaceable>
</screen>
				</para>
			</listitem>
			<listitem>
				<para>
					Run the <command>ls</command> command in the root of a book directory. The output will be similar to the following:
				</para>
				<para>
<screen>
en-US  Makefile
</screen>
				</para>
			</listitem>
			<listitem>
				<para>
					Run the following command to check for any errors that would stop the book from building:
				</para>
				<para>
<screen>
make test
</screen>
				</para>
			</listitem>
			<listitem>
				<para>
					Run the following command to build the book:
				</para>
				<para>
<screen>
make <replaceable>format</replaceable>
</screen>
				</para>
				<para>
					Replace <replaceable>format</replaceable> with the desired format, for example, <computeroutput>html</computeroutput>.
				</para>
			</listitem>
		</orderedlist>
		<para>
			The following table lists commonly used <command>make</command> commands:
		</para>
		<table id="tabl-Publican-Building_a_Book-Common_make_Commands">
			<title>Common make Commands</title>
			<tgroup cols="2">
				<colspec colname="column1"></colspec>
				<colspec colname="column2"></colspec>
				<thead>
					<row>
						<entry>
							Command
						</entry>
						<entry>
							Result
						</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>
							<command>make help</command>
						</entry>
						<entry>
							List available <command>make</command> commands for building a book.
						</entry>
					</row>
					<row>
						<entry>
							<command>make help_params</command>
						</entry>
						<entry>
							List available parameters that can be set in the <filename>Makefile</filename>.
						</entry>
					</row>
					<row>
						<entry>
							<command>make test</command>
						</entry>
						<entry>
							Check that the book can be built correctly. Run the <command>make test</command> command before running any other <command>make</command> command, and before checking a book back into a repository (i.e. CVS or SVN).
						</entry>
					</row>
					<row>
						<entry>
							<command>make html</command>
						</entry>
						<entry>
							Build the book in HTML format. The HTML output will be located in the <filename><replaceable>Book_Name</replaceable>/tmp/en-<replaceable>US</replaceable>/html/</filename> directory.
						</entry>
					</row>
					<row>
						<entry>
							<command>make html-single</command>
						</entry>
						<entry>
							Build the book HTML format. The output will be a single HTML file located in the <filename><replaceable>Book_Name</replaceable>/tmp/en-<replaceable>US</replaceable>/html-single/</filename> directory.
						</entry>
					</row>
					<row>
						<entry>
							<command>make htmlhelp</command>
						</entry>
						<entry>
							Build the book in HTML HELP format. HTML HELP is a limited form of HTML, designed to be viewed regardless of your platform or Web browser. The output is located in the <filename><replaceable>Book_Name</replaceable>/tmp/en-<replaceable>US</replaceable>/htmlhelp/</filename> directory.
						</entry>
					</row>
					<row>
						<entry>
							<command>make pdf</command>
						</entry>
						<entry>
							Build the book in PDF format. This may not be supported on all systems.
						</entry>
					</row>
					<row>
						<entry>
							<command>make clean</command>
						</entry>
						<entry>
							Remove all files and folders in the <filename>tmp/</filename> subdirectory. The <filename>tmp/</filename> subdirectory is created after running a <command>make</command> command to build a book, such as <command>make html</command>.
						</entry>
					</row>
					<row>
						<entry>
							<command>make tar-<replaceable>format</replaceable></command>
						</entry>
						<entry>
							Create a tar archive for the specified format. For example, running the <command>make tar-html</command> command creates a tar archive of the book in HTML format. The tar archive is located in the <filename>publish/en-<replaceable>US</replaceable>/<replaceable>Product_Name</replaceable>/<replaceable>book-version</replaceable>/tar/</filename> directory.
						</entry>
					</row>
					<row>
						<entry>
							<command>make clean_ids</command>
						</entry>
						<entry>
							<para>
								Change all IDs to a standard format. This format is <replaceable>Book_Name-title</replaceable>. For example, a section with a title of <computeroutput>First Section</computeroutput> in a book named <computeroutput>Test_Book</computeroutput> will have the following ID after running <command>make clean_ids</command>: <computeroutput>&lt;section id="Test_Book-First_Section"&gt;</computeroutput>
							</para>
						</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		<warning>
			<title><command>make clean_ids</command></title>
			<para>
				Be careful running the <command>make clean_ids</command> command. To make translation easier, <command>make clean_ids</command> prepends the first four characters of the tag to the ID. Therefore you must ensure you have checked out the latest versions of the source and the translations before running <command>make clean_ids</command>. Failing to have the po files checked out when you run <command>make clean_ids</command> will result in the XML and po files becoming out of sync. This will require all links in the po files to be manually updated. As well, running <command>make clean_ids</command> will remove all comments!
			</para>
		</warning>
	</section>

</chapter>

