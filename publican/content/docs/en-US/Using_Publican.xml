<?xml version='1.0'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>

<chapter id="chap-Publican-Using_the_publican_package">
	<title>Using the publican package</title>
	<para>
		This chapter describes the process of installing the publican package, creating books, the main configuration files, example book files, and how to build a book.
	</para>
	<section id="sect-Publican-Using_the_publican_package-Installing_publican">
		<title>Installing publican</title>
		<para>
			To install publican:
		</para>
		<orderedlist>
			<listitem>
				<para>
					Change to the root user: <command><prompt>$</prompt> su - </command>
				</para>
			</listitem>
			<listitem>
				<para>
					Run the following command to install the publican package: <command><prompt>#</prompt> yum install publican publican-doc</command>
				</para>
			</listitem>
		</orderedlist>
		<para>
			There are several brand packages available for use with publican. Run the following command as the root user to install packages for building branded books:
		</para>
<screen># yum install publican-<replaceable>brand</replaceable></screen>
		<para>
			Replace <replaceable>brand</replaceable> with redhat, fedora, jboss, ovirt, or gimp.
		</para>
	</section>
	
	<section id="sect-Publican-Using_the_publican_package-Creating_a_Book">
		<title>Creating a Book</title>
		<para>
			Use the <command>create_book</command> command to create a new book. The <command>create_book</command> command creates all the necessary files to create a book.
		</para>
		<para>
			The following is a list of valid options for the <command>create_book</command> command. Append these options to the end of the <command>create_book</command> command. For example, <command>create_book --help</command>, <command>create_book --name New_Book</command>, and so on:
		</para>
		<variablelist>
			<varlistentry>
				<term><filename>--help</filename></term>
				<listitem>
					<para>
						print a list of all <command>create_book</command> command options.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>--man</filename></term>
				<listitem>
					<para>
						view the publican manual page. The manual page contains the same information returned by the <command>create_book --help</command> command.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>--name<replaceable> Book_Name</replaceable></filename></term>
				<listitem>
					<para>
						replace <replaceable>Book_Name</replaceable> with the name of the book or article. This variable must not contain any spaces. For example, running the <command>create_book --name Test_Book</command> command creates a book named Test_Book, and all the necessary files to build the book. This updates the <filename>Makefile</filename> with the correct <computeroutput>DOCNAME</computeroutput>, and the <filename><replaceable>Book_Name</replaceable>.ent</filename> file with the correct <computeroutput>BOOKID</computeroutput>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>--version<replaceable> version</replaceable></filename></term>
				<listitem>
					<para>
						replace <replaceable>version</replaceable> with the version number of the product that the book describes. For example, for Red Hat Enterprise Linux 5.1 you would use 5.1. The default version is 0.1. Using <command>--version <replaceable> version</replaceable></command> updates the <computeroutput>&lt;issuenum&gt;&lt;/issuenum&gt;</computeroutput> tags in the <filename>Book_Info.xml</filename> file.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>--revision<replaceable> revision</replaceable></filename></term>
				<listitem>
					<para>
						replace <replaceable> revision</replaceable> with the revision number of the book. This number indicates to users when a new revision of the book is released. The initial GA release of the book should be revision 1.0. The default value is 0. Using <command>--revision<replaceable> revision</replaceable></command> updates the <computeroutput>&lt;productnumber&gt;&lt;/productnumber&gt;</computeroutput> tags in the <filename>Book_Info.xml</filename> file.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>--product<replaceable> Product_Name</replaceable></filename></term>
				<listitem>
					<para>
						replace <replaceable> Product_Name</replaceable> with the product name. This variable must not contain any spaces. Set this to <computeroutput>Fedora</computeroutput> for core Fedora documentation, and the name of the product for other products, for example, <computeroutput>Fedora_Directory_Server</computeroutput>. The <command>--product<replaceable> Product_Name</replaceable></command> option updates the <filename>Makefile</filename> and the <filename><replaceable>Book_Name</replaceable>.ent</filename> file with the correct product name.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>--article --name<replaceable> Article_Name</replaceable></filename></term>
				<listitem>
					<para>
						create an article instead of a book. Replace <replaceable> Article_Name</replaceable> with the article name. This variable must not contain any spaces.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>--brand <replaceable>brand</replaceable></filename></term>
				<listitem>
					<para>
						replace <replaceable>brand</replaceable> with RedHat, fedora, JBoss, oVirt, or GIMP. This requires the appropriate publican package to be installed. For example, to build Red Hat branded books, you must install the publican-redhat package. See <xref linkend="sect-Publican-Using_the_publican_package-Installing_publican" /> for instructions on installing the branded publican packages. If no brand is specified, the default brand is used.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>
			Before running the <command>create_book</command> command, use the <command>cd</command> command to change into the directory where you want the book to be created. For example, to create a book named Test_Book in the <filename>/my/books/</filename> directory, run the following commands:
		</para>
		<para>
<screen>cd /my/books/</screen>
		</para>
		<para>
<screen>create_book --name Test_Book</screen>
		</para>
		<para>
			To see the results of this command, run the following:
		</para>
		<para>
<screen>ls</screen>
		</para>
		<para>
			The output should be similar to the following:
		</para>
		<para>
<screen>en-US  Makefile</screen>
		</para>
	</section>
	
	<section id="sect-Publican-Using_the_publican_package-Files_in_the_Book_directory">
		<title>Files in the Book directory</title>
		<para>
			Running the <command>create_book --name <replaceable>Book_Name</replaceable></command> command will create a directory structure and the required files, similar to the following:
		</para>
		<figure id="figu-Publican-Files_in_the_Book_directory-directory_structure">
			<title>directory structure</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="./images/directory_structure.png" format="PNG" />
				</imageobject>
				<textobject>
					<phrase>directory structure</phrase>
				</textobject>
			</mediaobject>
		</figure>
		<section id="sect-Publican-Files_in_the_Book_directory-The_Makefile">
			<title>The Makefile</title>
			<para>
				The <filename>Makefile</filename> is used to configure build options, and is located in the root of the book directory. The following is an example <filename>Makefile</filename>, with instructions following afterwards:
			</para>
<programlisting><xi:include href="extras/Makefile" parse="text" xmlns:xi="http://www.w3.org/2001/XInclude"></xi:include></programlisting>
			<variablelist>
				<varlistentry>
					<term><filename>XML_LANG</filename></term>
					<listitem>
						<para>
							set this to the language of the source xml files, for example, <computeroutput>en-US</computeroutput>.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>BRAND</filename></term>
					<listitem>
						<para>
							set the brand of the book. Accepted values are <computeroutput>RedHat</computeroutput>, <computeroutput>fedora</computeroutput>, <computeroutput>JBoss</computeroutput>, <computeroutput>oVirt</computeroutput> and <computeroutput>GIMP</computeroutput>. If no brand is specified, the default brand is used.
						</para>
						<para>
							Running the <command>create_book --name <replaceable>Book_Name</replaceable> --brand <replaceable>brand</replaceable></command> command correctly configures the <computeroutput>BRAND</computeroutput>.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>OTHER_LANGS</filename></term>
					<listitem>
						<para>
							space-separated list of other language locales. Used to specify other language locales to build the book in.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<para>
				The following is an example <filename>Makefile</filename> that includes translations:
			</para>
			<para>
<programlisting>XML_LANG       = en-US
BRAND	       = RedHat

OTHER_LANGS    = as-IN bn-IN de-DE es-ES fr-FR gu-IN hi-IN it-IT ja-JP kn-IN ko-KR ml-IN mr-IN or-IN pa-IN pt-BR ru-RU si-LK ta-IN te-IN zh-CN zh-TW
	
COMMON_CONFIG  = /usr/share/publican
include $(COMMON_CONFIG)/make/Makefile.common</programlisting>
			</para>
			<note>
				<title>Note</title>
				<para>
					<computeroutput>OTHER_LANGS</computeroutput> is no longer commented out.
				</para>
			</note>
			<note>
				<title>Note</title>
				<para>
					Run the <command>make help_params</command> command in the root directory of a book for a full list of parameters that can be set in the <filename>Makefile</filename>.
				</para>
			</note>
		</section>
		
		<section id="sect-Publican-Files_in_the_Book_directory-Book_Info.xml">
			<title>Book_Info.xml</title>
			<para>
				The <filename>Book_Info.xml</filename> file is used to set the book ID, title, subtitle, issue and product numbers, and an abstract which appears at the start of the book. The following is an example <filename>Book_Info.xml</filename> file for the Test_Book book, with instructions following afterwards:
			</para>
<programlisting language="myxml"><xi:include href="extras/Book_Info.xmlt" parse="text" xmlns:xi="http://www.w3.org/2001/XInclude"></xi:include></programlisting>
			<variablelist>
				<varlistentry>
					<term><filename>&lt;bookinfo id="<replaceable>book_id</replaceable>"&gt;</filename></term>
					<listitem>
						<para>
							The Book ID is used internally and is not displayed to end users when the book is built. replace <replaceable>book_id</replaceable> with an ID for the book; however, if you run the <command>make clean_ids</command> command, this ID along with all other IDs will be changed to a <replaceable>Book_Name-Title</replaceable> format, where "Title" is the title of the article, book, section, or chapter.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;title&gt;<replaceable>title</replaceable>&lt;/title&gt;</filename></term>
					<listitem>
						<para>
							The title of the book, for example: &quot;Server Configuration Guide&quot;. The title appears under the product name when the book is built. Replace <replaceable>title</replaceable> with the title of the book. A title is required to build an RPM. When building a book as an RPM the title is used as the part of the RPM name in the RPM spec file.
						</para>
						<important>
							<title>Important</title>
							<para>
								This field can only contain the values: 'a-z', 'A-Z' and '_'.
							</para>
						</important>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;subtitle&gt;<replaceable>subtitle</replaceable>&lt;/subtitle&gt;</filename></term>
					<listitem>
						<para>
							The subtitle is ... The subtitle appears under the title when the book is built. Replace <replaceable>subtitle</replaceable> with a subtitle for the book. A subtitle is required to build an RPM. When building a book as an RPM the subtitle is used as the <computeroutput>Summary</computeroutput> in the RPM spec file.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;productname&gt;<replaceable>productname</replaceable>&lt;/productname&gt;</filename></term>
					<listitem>
						<para>
							The name of the product or product stream, for example: &quot;Red Hat Enterprise Linux&quot; or &quot;JBoss Enterprise Application Platform&quot;. Replace <replaceable>productname</replaceable> with the product name of the book. When building a book as an RPM the productname is used as the part of the RPM name in the RPM spec file.
						</para>
						<important>
							<title>Important</title>
							<para>
								This field can only contain the values: 'a-z', 'A-Z' and '_'.
							</para>
						</important>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;productnumber&gt;<replaceable>productnumber</replaceable>&lt;/productnumber&gt;</filename></term>
					<listitem>
						<para>
							The version number of the product to which the book applies, for example &quot;5.1&quot; for Red Hat Enterprise Linux 5.1, 4.3 for JBoss EAP 4.3. If your book does not apply to a product then you can put whatever you like. Replace <replaceable>productnumber</replaceable> with the product number.
						</para>
						<para>
							Running the <command>create_book --name <replaceable> Book_Name</replaceable> --version <replaceable>version</replaceable></command> command correctly configures the product number.
						</para>
						<important>
							<title>Important</title>
							<para>
								This field can only containn the values: '0-9' and '.'.
							</para>
						</important>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;edition&gt;<replaceable>edition</replaceable>&lt;/edition&gt;</filename></term>
					<listitem>
						<para>
							This is the edition number of the book. The first edition of the book should be 1.0 (you may like to use 0.y for alpha and beta releases). Subsequent edition should increment the 1.y to indicate to readers that the book is a new edition. Replace <replaceable>edition</replaceable> with the x.y edition number. The edition changes the version number (the first two digits) when building a book with the <command>tar</command> or <command>srpm</command> options. For example, setting the edition to <filename>1.2</filename> and building the book using the <command>make srpm-en-US</command> command, would create an RPM file named <filename><replaceable>productname</replaceable>-<replaceable>title</replaceable>-<replaceable>productnumber</replaceable>-en-US-1.2-0.src.rpm</filename>.
						</para>
						<para>
							Running the <command>create_book --name<replaceable> Book_Name</replaceable> --edition <replaceable>x</replaceable>.<replaceable>y</replaceable></command> command correctly configures the edition.
						</para>
						<important>
							<title>Important</title>
							<para>
								This field can only containn the values: '0-9' and '.'.
							</para>
						</important>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;pubsnumber&gt;<replaceable>pubsnumber</replaceable>&lt;/pubsnumber&gt;</filename></term>
					<listitem>
						<para>
							The pubsnumber changes the release number (the last digit) when building a book with the <filename>tar</filename> or <filename>srpm</filename> options. For example, setting the pubsnumber to <filename>1</filename> and building the book using the <command>make srpm-en-US</command> command, would create an RPM file named <filename><replaceable>productname</replaceable>-<replaceable>title</replaceable>-<replaceable>productnumber</replaceable>-en-US-<replaceable>edition</replaceable>-1.src.rpm</filename>.
						</para>
						<important>
							<title>Important</title>
							<para>
								This field can only containn the values: '0-9'.
							</para>
						</important>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;abstract&gt;&lt;para&gt;<replaceable>abstract</replaceable>&lt;/para&gt;&lt;/abstract&gt;</filename></term>
					<listitem>
						<para>
							A brief description of the subject of a book that appears before the main body of text in html and pdf output. This paragraph indicates to the reader in a general sense what the book covers, and allows them to evaluate whether or not they need or want to read it, without having to scan the entire book. It is also used in the rpm description, which allows people installing packages to do the same thing before installing a documentation package. Replace <replaceable>abstract</replaceable> with the abstract for the book. The abstract appears before the table of contents when using HTML, and on the second page when using PDF. When building a book as an RPM the abstract is used as the <computeroutput>description</computeroutput> in the RPM spec file.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;year&gt;&amp;YEAR&semi;&lt;/year&gt;</filename></term>
					<listitem>
						<para>
							The <filename>&amp;YEAR&semi;</filename> entity is defined in <filename><replaceable>Book_Name</replaceable>.ent</filename>. Use this to set the copyright year of the book. Refer to <xref linkend="sect-Publican-Files_in_the_Book_directory-Book_Name.ent" /> for configuration details.
						</para>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><filename>&lt;holder&gt;&amp;HOLDER&semi;&lt;/holder&gt;</filename></term>
					<listitem>
						<para>
							The <filename>&amp;HOLDER&semi;</filename> entity is defined in <filename><replaceable>Book_Name</replaceable>.ent</filename>. Use this to set the copyright holder of the book. Refer to <xref linkend="sect-Publican-Files_in_the_Book_directory-Book_Name.ent" /> for configuration details. The copyright section is not required.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>

			<note>
				<title>Note</title>
				<para>
					This idiosyncratic information organisation (ie, the use above of &lt;title&gt;, &lt;subtitle&gt; and &lt;issuenum&gt;) is a legacy of the old and now entirely deprecated SGML system once used internally at Red Hat. If we had our time again, for example, we'd use &lt;productname&gt; and &lt;productnumber&gt; for the Product Name and Product Version Number, instead of &lt;title&gt; and &lt;issuenum&gt;. 250 books later, however, changing not just the tags but the templates and associated CSS and XSL is more work than it is worth.
				</para>
			</note>
		</section>
		
		<section id="sect-Publican-Files_in_the_Book_directory-Author_Group.xml">
			<title>Author_Group.xml</title>
			<para>
				Use the <filename>Author_Group.xml</filename> file to configure author details. This file is not required. The following is an example <filename>Author_Group.xml</filename> file:
			</para>
<programlisting language="myxml"><xi:include href="extras/Author_Group.xmlt" parse="text" xmlns:xi="http://www.w3.org/2001/XInclude"></xi:include></programlisting>
			<para>
				The <filename>Author_Group.xml</filename> file does not have to contain all of the above information: include as much or as little as required.
			</para>
			<para>
				Delete the following line from Book_Info.xml to prevent author information being included in the built versions of a book:
			</para>
<programlisting language="myxml">&lt;xi:include href="Author_Group.xml" xmlns:xi="http://www.w3.org/2001/XInclude" /&gt;</programlisting>
		</section>
		
		<section id="sect-Publican-Files_in_the_Book_directory-Chapter.xml">
			<title>Chapter.xml</title>
			<para>
				The <filename>Chapter.xml</filename> file is a template for creating chapter files. Chapter files contain the content that make up a book. The following is a chapter template (<filename>Chapter.xml</filename>) that is created after running the <command>create_book</command> command. Note the <filename>DOCTYPE</filename> is set to <filename>chapter</filename>:
			</para>
<programlisting language="myxml"><xi:include href="extras/Chapter.xmlt" parse="text" xmlns:xi="http://www.w3.org/2001/XInclude"></xi:include></programlisting>
			<para>
				This chapter has two sections, <filename>Section 1 Test</filename> and <filename>Section 2 Test</filename>. Please refer to <ulink url="http://docbook.org/tdg/en/html/chapter.html"></ulink> for further information about chapters.
			</para>
			<note>
				<title>Note</title>
				<para>
					The chapter file should be renamed to reflect the chapter subject. For example, a chapter on product installation could be named <filename>Installation.xml</filename>, whereas a chapter on setting up a piece of software would be better called <filename>Setup.xml</filename> or <filename>Configuration.xml</filename>.
				</para>
			</note>
		</section>
		
		<section id="sect-Publican-Files_in_the_Book_directory-Book_Name.xml">
			<title>Book_Name.xml</title>
			<para>
				The <filename><replaceable>Book_Name</replaceable>.xml</filename> file contains <filename>xi:include</filename> directives to include the chapters for a book. Chapters are contained in separate XML files, and the <filename><replaceable>Book_Name</replaceable>.xml</filename> file brings them together into a single book.
			</para>
			<para>
				The following is an example <filename><replaceable>Book_Name</replaceable>.xml</filename> file. Note the <filename>DOCTYPE</filename> is set to <filename>book</filename>.
			</para>
<programlisting language="myxml"><xi:include href="extras/Book_Name.xmlt" parse="text" xmlns:xi="http://www.w3.org/2001/XInclude"></xi:include></programlisting>
			<para>
				This example loads the <computeroutput>Book_Info.xml</computeroutput>, <computeroutput>Preface.xml</computeroutput>, <computeroutput>Chapter.xml</computeroutput>, and <computeroutput>Appendix.xml</computeroutput> XML files.
			</para>
			<note>
				<title>Note</title>
				<para>
					The order in which chapters are listed matters. When this example book is built, Book_Info.xml will precede Preface.xml which will precede Chapter.xml, and so on.
				</para>
			</note>
			<para>
				The <filename><replaceable>Book_Name</replaceable>.xml</filename> file is not limited to using <filename>xi:include</filename> directives. Books can be created using a single XML file. The following is an example of a book created using a single XML file:
			</para>
<programlisting language="myxml">&lt;book&gt;

&lt;chapter&gt;
&lt;title&gt;Chapter 1&lt;/title&gt;
	&lt;para&gt;
		A paragraph in Chapter 1.
	&lt;/para&gt;
	&lt;section id="section1"&gt;
	&lt;title&gt;Chapter 1 Section 1&lt;/title&gt;
		&lt;para&gt;
			A paragraph in Section 1.
		&lt;/para&gt;
	&lt;/section&gt;
	&lt;section id="section2"&gt;
	&lt;title&gt;Chapter 1 Section 2&lt;/title&gt;
		&lt;para&gt;
			A paragraph in Section 2.
		&lt;/para&gt;
	&lt;/section&gt;
&lt;/chapter&gt;

&lt;chapter&gt;
&lt;title&gt;Chapter 2&lt;/title&gt;
	&lt;para&gt;
		A paragraph in Chapter 2.
	&lt;/para&gt;
&lt;/chapter&gt;

&lt;/book&gt;</programlisting>
			<para>
				This book contains two chapters. Chapter one contains two sections. Please refer to <ulink url="http://docbook.org/tdg/en/html/section.html"></ulink> for further information about sections, and <ulink url="http://docbook.org/tdg/en/html/book.html"></ulink> for further information about books.
			</para>
		</section>
		
		<section id="sect-Publican-Files_in_the_Book_directory-Book_Name.ent">
			<title>Book_Name.ent</title>
			<para>
				The <filename><replaceable>Book_Name</replaceable>.ent</filename> file is used to define local entities. You must define <computeroutput>YEAR</computeroutput> and <computeroutput>HOLDER</computeroutput> entities, otherwise the book will not build:
			</para>
			<para>
<screen><xi:include href="extras/Book_Name.ent" parse="text" xmlns:xi="http://www.w3.org/2001/XInclude"></xi:include></screen>
			</para>
			<para>
				The <computeroutput>YEAR</computeroutput> and <computeroutput>HOLDER</computeroutput> entities are used for copyright information. Use entities to make writing commonly used terms quicker:
			</para>
			<para>
<screen>&lt;!ENTITY FDP "Fedora Documentation Project"&gt;
&lt;!ENTITY FDS "Fedora Directory Server"&gt;</screen>
			</para>
			<para>
				Two entities are defined: <computeroutput>FDP</computeroutput> and <computeroutput>FDS</computeroutput>. Instead of typing <computeroutput>Fedora Documentation Project</computeroutput> you can use <computeroutput>&amp;FDP&semi;</computeroutput>. The build system adds the required entities to the XML files at build time. In the example above, <computeroutput>&amp;FDP&semi;</computeroutput> would be replaced with Fedora Documentation Project.
			</para>
		</section>
		<section id="sect-Publican-Files_in_the_Book_directory-Revision_History.xml">
			<title>Revision_History.xml</title>
			<para>
				Make will search for the first XML file in the $(XML_LANG) directory containing a revhistory tag. Publican will use that file to build the RPM revision history from.
			</para>
			<important>
				<title>Important</title>
				<para>
					All dates must be in the correct RPM format, other formats will break the spec file creation.
				</para>
				<informalexample>
					<para>
						Mon Aug 4 2008
					</para>
				</informalexample>
			</important>
		</section>

	</section>
	
	<section id="sect-Publican-Using_the_publican_package-Adding_Images">
		<title>Adding Images</title>
		<para>
			Use the <filename>images</filename> subdirectory in the <filename>en-<replaceable>US</replaceable>/</filename> directory to store images. Use <computeroutput>./images/<replaceable>image-name</replaceable></computeroutput> to insert images into a book. The following is an example that inserts the <filename>testimage.png</filename> image:
		</para>
		<para>
<screen>&lt;mediaobject&gt;
	&lt;imageobject&gt;
		&lt;imagedata fileref="./images/testimage.png" /&gt;
	&lt;/imageobject&gt;
	&lt;textobject&gt;&lt;phrase&gt;alternate text goes here&lt;/phrase&gt;&lt;/textobject&gt;
&lt;/mediaobject&gt;</screen>
		</para>
		<para>
			<warning>
				<title>Image File Locations</title>
				<para>
					The build system only uses images in the <filename>en-<replaceable>US</replaceable>/images</filename> subdirectory. Other directories do not work.
				</para>
			</warning>
		</para>
	</section>
	
	<section id="sect-Publican-Using_the_publican_package-Building_a_Book">
		<title>Building a Book</title>
		<para>
			To build a book:
		</para>
		<orderedlist>
			<listitem>
				<para>
					Confirm the <computeroutput>YEAR</computeroutput> and <computeroutput>HOLDER</computeroutput> entities have been configured in the <filename><replaceable>Book_Name</replaceable>.ent</filename> file, as per <xref linkend="sect-Publican-Files_in_the_Book_directory-Book_Name.ent" />.
				</para>
			</listitem>
			<listitem>
				<para>
					Change into the root directory of the book. For example, if the book was named <computeroutput>Test_Book</computeroutput> and was located in the <filename>/books/</filename> directory, run the following command:
				</para>
				<para>
<screen>cd <replaceable>/books/Test_Book</replaceable></screen>
				</para>
			</listitem>
			<listitem>
				<para>
					Run the following command to check for any errors that would stop the book from building:
				</para>
				<para>
<screen>make test-en-US</screen>
				</para>
			</listitem>
			<listitem>
				<para>
					Run the following command to build the book:
				</para>
				<para>
<screen>make <replaceable>format</replaceable>-en-US</screen>
				</para>
				<para>
					Replace <replaceable>format</replaceable> with the desired format, for example, <computeroutput>html</computeroutput>.
				</para>
			</listitem>
		</orderedlist>
		<para>
			The following table lists commonly used <command>make</command> commands:
		</para>
		<segmentedlist>
			<segtitle>Command</segtitle>
			<segtitle>Result</segtitle>
			<seglistitem>
				<seg><command>make help</command></seg>
				<seg>List available <command>make</command> commands for building a book.</seg>
			</seglistitem>
			<seglistitem>
				<seg><command>make help_params</command></seg>
				<seg>List available parameters that can be set in the <filename>Makefile</filename>.</seg>
			</seglistitem>
			<seglistitem>
				<seg><command>make test-en-US</command></seg>
				<seg>Check that the book can be built correctly. Run the <command>make test</command> command before running any other <command>make</command> command, and before checking a book back into a repository (i.e. CVS or SVN).</seg>
			</seglistitem>
			<seglistitem>
				<seg><command>make html-en-US</command></seg>
				<seg>Build the book in HTML format. The HTML output will be located in the <filename><replaceable>Book_Name</replaceable>/tmp/en-<replaceable>US</replaceable>/html/</filename> directory.</seg>
			</seglistitem>
			<seglistitem>
				<seg><command>make html-single-en-US</command></seg>
				<seg>Build the book HTML format. The output will be a single HTML file located in the <filename><replaceable>Book_Name</replaceable>/tmp/en-<replaceable>US</replaceable>/html-single/</filename> directory.</seg>
			</seglistitem>
			<seglistitem>
				<seg><command>make htmlhelp-en-US</command></seg>
				<seg>Build the book in HTML HELP format. HTML HELP is a limited form of HTML, designed to be viewed regardless of your platform or Web browser. The output is located in the <filename><replaceable>Book_Name</replaceable>/tmp/en-<replaceable>US</replaceable>/htmlhelp/</filename> directory.</seg>
			</seglistitem>
			<seglistitem>
				<seg><command>make pdf-en-US</command></seg>
				<seg>Build the book in PDF format. This may not be supported on all systems.</seg>
			</seglistitem>
			<seglistitem>
				<seg><command>make clean</command></seg>
				<seg>Remove all files and folders in the <filename>tmp/</filename> subdirectory. The <filename>tmp/</filename> subdirectory is created after running a <command>make</command> command to build a book, such as <command>make html</command>.</seg>
			</seglistitem>
			<seglistitem>
				<seg><command>make web-srpm-en-US</command></seg>
				<seg>Create a source RPM to generate web based documnetation RPMs from.</seg>
			</seglistitem>
			<seglistitem>
				<seg><command>make clean_ids</command></seg>
				<seg>Change all IDs to a standard format. This format is <replaceable>Book_Name-title</replaceable>. For example, a section with a title of <computeroutput>First Section</computeroutput> in a book named <computeroutput>Test_Book</computeroutput> will have the following ID after running <command>make clean_ids</command>: <computeroutput>&lt;section id="Test_Book-First_Section"&gt;</computeroutput></seg>
			</seglistitem>
		</segmentedlist>
		<warning>
			<title>Warning: <command>make clean_ids</command></title>
			<para>
				To make translation easier, <command>make clean_ids</command> uses the first four characters of the tag as a prefix for the ID. Consequently, you must check out the latest versions of the xml source and translations before running this command.
			</para>
			<para>
				Failing to have the po files checked out before running <command>make clean_ids</command> causes the XML and po files to slip out of sync. And this means all links in the po files have to be manually updated.
			</para>
			<para>
				As well, running <command>make clean_ids</command> removes all comments from the xml source.
			</para>
		</warning>
	</section>

</chapter>

