# Language bn-IN translations for Users_Guide package.
# Automatically generated, 2008.
#
msgid ""
msgstr ""
"Project-Id-Version: Users_Guide VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2008-08-20 06:04+0000\n"
"PO-Revision-Date: 2008-08-20 06:04+0000\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: Sets.xml:6
#, no-c-format
msgid "Using Sets"
msgstr ""

#. Tag: para
#: Sets.xml:7
#, no-c-format
msgid ""
"A set is a collection of books, published as a single output. The "
"<citetitle>Services Plan</citetitle> for example is a Set comprised of many "
"books such as the <citetitle>Developer Guide</citetitle>, "
"<citetitle>Engineering Content Services Guide</citetitle> and the "
"<citetitle>Engineering Operations Guide</citetitle> to name just a few. The "
"<command>create_book</command> command creates a template for a set by "
"setting the <parameter>type</parameter> parameter to <literal>Set</literal>. "
"There are two types of sets, Stand-alone Sets and Distributed Sets."
msgstr ""

#. Tag: title
#: Sets.xml:11
#, no-c-format
msgid "Stand-alone Sets"
msgstr ""

#. Tag: para
#: Sets.xml:12
#, no-c-format
msgid ""
"A stand-alone set contains the xml files for each book, all of which are "
"located inside the directory of the set."
msgstr ""

#. Tag: para
#: Sets.xml:15
#, no-c-format
msgid ""
"The procedure that follows will guide you through the process of creating a "
"stand-alone set named <citetitle>My Set</citetitle> located in a directory "
"called <filename>books/My_Set/</filename>. The set will contain "
"<citetitle>Book A</citetitle> and <citetitle>Book B</citetitle> both of "
"which will be manually created inside the <filename>books/My_Set/en-US</"
"filename> directory."
msgstr ""

#. Tag: title
#: Sets.xml:19
#, no-c-format
msgid "Creating a Stand-alone Set"
msgstr ""

#. Tag: para
#: Sets.xml:21
#, no-c-format
msgid ""
"Run the following command in a shell in the <filename>books/</filename> "
"directory to create a set named <literal>My_Set</literal> branded in the Red "
"Hat style."
msgstr ""

#. Tag: programlisting
#: Sets.xml:24
#, no-c-format
msgid "create_book --type=Set --name=My_Set --brand=RedHat"
msgstr ""

#. Tag: para
#: Sets.xml:27
#, no-c-format
msgid ""
"<command>cd</command> into the <filename>My_Set/en-US</filename> directory "
"and create two directories called <filename>Book_A</filename> and "
"<filename>Book_B</filename>."
msgstr ""

#. Tag: programlisting
#: Sets.xml:30
#, no-c-format
msgid ""
"cd My_Set/en-US\n"
"mkdir Book_A Book_B"
msgstr ""

#. Tag: para
#: Sets.xml:33
#, no-c-format
msgid ""
"<command>cd</command> into the <filename>books/My_Set/en-US/Book_A</"
"filename> directory. Create and edit the <filename>Book_A.xml</filename>, "
"<filename>Book_Info.xml</filename>, and any other xml files required for "
"your book such as those required for individual chapters. Ensure that "
"<filename>Book_A.xml</filename> contains the correct <sgmltag>xi:include</"
"sgmltag> references to all of your xml files in the directory. For example, "
"if <citetitle>Book A</citetitle> contained <filename>Book_Info.xml</"
"filename> and <filename>Chapter_1.xml</filename>, the <filename>Book_A.xml</"
"filename> file would look like this:"
msgstr ""

#. Tag: screen
#: Sets.xml:36
#, no-c-format
msgid ""
"&lt;?xml version=&#39;1.0&#39;?&gt;\n"
"&lt;!DOCTYPE book PUBLIC \"-//OASIS//DTD DocBook XML V4.5//EN\" \n"
"\"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd\" [\n"
"]&gt;\n"
"          \n"
"&lt;book&gt;\n"
"          &lt;xi:include href=\"Book_Info.xml\" xmlns:xi=\"http://www.w3."
"org/2001/XInclude\"&gt;&lt;/xi:include&gt;\n"
"          &lt;xi:include href=\"Chapter_1.xml\" xmlns:xi=\"http://www.w3."
"org/2001/XInclude\"&gt;&lt;/xi:include&gt;\n"
"&lt;/book&gt;"
msgstr ""

#. Tag: para
#: Sets.xml:39
#, no-c-format
msgid ""
"Use the same process for <citetitle>Book_B</citetitle>, located in the "
"<filename>books/My_Set/en-US/Book_B</filename> directory, as per the step "
"above."
msgstr ""

#. Tag: para
#: Sets.xml:44
#, no-c-format
msgid ""
"Open the <filename>books/My_Set/en-US/My_Set.xml</filename> file in an "
"editor. For each book in the set, add an <sgmltag>xi:include</sgmltag> "
"reference to the primary xml file from the book. The primary xml file for "
"<citetitle>Book A</citetitle> will be <filename>Book_A.xml</filename> and "
"for <citetitle>Book B</citetitle>, <filename>Book_B.xml</filename>. The "
"<filename>My_Set.xml</filename> file should now look like this:"
msgstr ""

#. Tag: programlisting
#: Sets.xml:47 Sets.xml:90
#, no-c-format
msgid ""
"<xi:include href=\"extras/Set_Name.xmlt\" parse=\"text\" xmlns:xi=\"http://"
"www.w3.org/2001/XInclude\"></xi:include>"
msgstr ""

#. Tag: para
#: Sets.xml:50 Sets.xml:93
#, no-c-format
msgid ""
"Test your set by running the <command>make test-en-US</command> command."
msgstr ""

#. Tag: title
#: Sets.xml:59
#, no-c-format
msgid "Distributed Sets"
msgstr ""

#. Tag: para
#: Sets.xml:60
#, no-c-format
msgid ""
"A Distributed Set contains books that are located in <package>SVN</package>. "
"By setting the repository location and titles of the included books in the "
"<filename>Makefile</filename>, each book can be exported to build the entire "
"set. The procedure that follows will guide you through the process of "
"creating a set named <citetitle>My Set</citetitle> containing "
"<citetitle>Book A</citetitle> and <citetitle>Book B</citetitle>."
msgstr ""

#. Tag: para
#: Sets.xml:64
#, no-c-format
msgid ""
"The following procedure assumes that <citetitle>Book A</citetitle> and "
"<citetitle>Book B</citetitle> already exist and are available in your "
"<package>SVN</package> repository. Currently <package>publican</package> "
"only supports <package>SVN</package>."
msgstr ""

#. Tag: title
#: Sets.xml:69
#, no-c-format
msgid "Creating a Set"
msgstr ""

#. Tag: para
#: Sets.xml:71
#, no-c-format
msgid ""
"Run the following command in a shell to create a set named <literal>My_Set</"
"literal> branded in the Red Hat style."
msgstr ""

#. Tag: programlisting
#: Sets.xml:74
#, no-c-format
msgid "$ create_book --type=Set --name=My_Set --brand=RedHat"
msgstr ""

#. Tag: para
#: Sets.xml:77
#, no-c-format
msgid ""
"Uncomment the following lines in the <filename>Makefile</filename> from:"
msgstr ""

#. Tag: programlisting
#: Sets.xml:80
#, no-c-format
msgid ""
"#BOOKS                = My_Other_Book His_Book Her_Book Their_Book\n"
"#SET_REPO        = http://svn.repo.com/repos/project\n"
"#SET_REPO_TYPE        = SVN\n"
"...\n"
"#pre:: get_books set_books\n"
"#clean:: clean_set_books"
msgstr ""

#. Tag: para
#: Sets.xml:81
#, no-c-format
msgid "to :"
msgstr ""

#. Tag: programlisting
#: Sets.xml:84
#, no-c-format
msgid ""
"BOOKS                 = Book_A Book_B\n"
"SET_REPO        = <replaceable>http://PATH-TO-YOUR-SVN-REPOSITORY</"
"replaceable>SET_REPO_TYPE        = SVN\n"
"...\n"
"pre:: get_books set_books\n"
"clean:: clean_set_books"
msgstr ""

#. Tag: para
#: Sets.xml:87
#, no-c-format
msgid ""
"Open the <filename>My_Set.xml</filename> file in an editor. For each book in "
"the set, add an <sgmltag>xi:include</sgmltag> reference to the primary xml "
"file from the book. The primary xml file for <citetitle>Book A</citetitle> "
"will be <filename>Book_A.xml</filename> and for <citetitle>Book B</"
"citetitle>, <filename>Book_B.xml</filename>. The <filename>My_Set.xml</"
"filename> file should now look like this:"
msgstr ""

#. Tag: para
#: Sets.xml:97
#, no-c-format
msgid ""
"When building a set, the <command>make clean_ids</command> command will be "
"run over each book because of the constraint that ID&#39;s must be unique "
"across all books. Be careful of creating IDs that rely on content that may "
"not be available when building books independently of the set."
msgstr ""
