<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Users_Guide.ent">
%BOOK_ENTITIES;
]>
<section conformance="229" id="sect-Users_Guide-Website-structure-product-version-manual">
	<title>Creating, installing, and updating product pages and version pages</title>
	<para>
		<application>Publican</application>-generated product pages and version pages are the localizable pages that provide a general overview of a product or version respectively. Visitors access these pages by clicking on a product or version in the navigation menu. The pages are structured as DocBook <sgmltag>&lt;article&gt;</sgmltag>s with an extra <parameter>web_type:&nbsp;product</parameter> or <parameter>web_type:&nbsp;version</parameter> parameter in their <filename>publican.cfg</filename> files. In their structure and presentation, product pages and version pages are the same as any other article that you produce with <application>Publican</application>. To create a product page or version page:
	</para>
	<procedure>
		<step>
			<para>
				Change into a convenient directory and run the following <prompt>$</prompt> <command>publican create</command> command:
			</para>
<screen><prompt>$</prompt> <prompt>$</prompt> <command>publican create --type Article --name <replaceable>page_name</replaceable></command></screen>
			<para>
				For example, a product page might be:
			</para>
<screen><prompt>$</prompt> <prompt>$</prompt> <command>publican create --type Article --name FooMaster</command></screen>
			<para>
				or a version page might be:
			</para>
<screen><prompt>$</prompt> <prompt>$</prompt> <command>publican create --type Article --name FooMaster_3</command></screen>
		</step>
		<step>
			<para>
				Change into the article directory:
			</para>
<screen><prompt>$</prompt> <prompt>$</prompt> <command>cd <replaceable>page_name</replaceable></command></screen>
			<para>
				For example:
			</para>
<screen><prompt>$</prompt> <prompt>$</prompt> <command>cd FooMaster</command></screen>
		</step>
		<step>
			<para>
				Unlink the <filename>Article_Info.xml</filename> file from your root XML file.
			</para>
			<para>
				Little of the content of the <filename>Article_Info.xml</filename> file is likely to be useful for product pages or version pages. Therefore, edit the root XML file of your page to remove the <sgmltag>&lt;xi:include&gt;</sgmltag> tag that links to <filename>Article_Info.xml</filename>. <application>Publican</application> still uses the information in <filename>Article_Info.xml</filename> for packaging, but does not include it on the page itself.
			</para>
		</step>
		<step>
			<para>
				Edit the <filename>publican.cfg</filename> file.
			</para>
			<para>
				At the very least, you must add the <parameter>web_type</parameter> parameter and set it to <literal>product</literal> or <literal>version</literal>:
			</para>
<programlisting>web_type: product</programlisting>
			<para>
				or
			</para>
<programlisting>web_type: version</programlisting>
			<para>
				The <parameter>web_type</parameter> parameter instructs <application>Publican</application> to process this document differently from product documentation. This is the only mandatory change to the <filename>publican.cfg</filename> file. Other optional changes to the <filename>publican.cfg</filename> file that are frequently useful for product pages or version pages include:
			</para>
			<variablelist>
				<varlistentry>
					<term><parameter>brand</parameter></term>
					<listitem>
						<para>
							To style your home page to match your documents, add:
						</para>
<programlisting>brand: <replaceable>name_of_brand</replaceable></programlisting>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term><parameter>docname</parameter></term>
					<term><parameter>product</parameter></term>
					<listitem>
						<para>
							If the <sgmltag>&lt;title&gt;</sgmltag> or the <sgmltag>&lt;product&gt;</sgmltag> that you set in the <filename>Article_Info</filename> file included anything other than basic, unaccented Latin characters, set the <parameter>docname</parameter> and <parameter>product</parameter> as necessary.
						</para>
					</listitem>
				</varlistentry>
			</variablelist>
		</step>

		<step>
			<para>
				Edit the content of the <filename><replaceable>page_name</replaceable>.xml</filename> file (for example, <filename>FooMaster.xml</filename>) as you would any other DocBook document.
			</para>
			<para>
				If you remove the <sgmltag>&lt;xi:include&gt;</sgmltag> that links to <filename>Article_Info.xml</filename>, specify a title for your page in the following format:
			</para>
<programlisting language="XML">&lt;title role="producttitle"&gt;FooMaster Documentation&lt;/title&gt;</programlisting>
		</step>
		<step>
			<para>
				If you publish documentation in more than one language, create a set of POT files and a set of PO files for each language with the <prompt>$</prompt> <command>publican update_pot</command> and <command>publican update_po</command> commands.
			</para>
		</step>
		<step>
			<para>
				Build the product page or version page in single-page HTML format with the <option>--embedtoc</option> option and install it in your website structure. For example:
			</para>
<screen><prompt>$</prompt> <prompt>$</prompt> <command>publican build --publish --formats html-single --embedtoc --langs all</command> 
<prompt>$</prompt> <command>publican install_book --site_config ~/docsite/foomaster.cfg --lang <replaceable>Language_Code</replaceable></command></screen>
			<para>
				Note that you can build all languages at the same time, but must install the product page or version page for each language with a separate <prompt>$</prompt> <command>publican install_book</command> command. 
			</para>
		</step>
	</procedure>
</section>
