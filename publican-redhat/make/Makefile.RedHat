
DOC_URL		= http://www.redhat.com/docs
STRICT		= 1

# hack, RHEL SHIPPED products where in RHEL5 before this multi-product layout was in place
# So we have to use a different naming scheme for the 4 shipped books
ifeq "$(PRODUCT)" "Red_Hat_Enterprise_Linux"
ifeq "$(DOCNAME)" "Deployment_Guide"
SPEC_NAME	= $(DOCNAME)
DESKTOP		= 1
endif
ifeq "$(DOCNAME)" "Virtualization"
SPEC_NAME	= $(DOCNAME)
DESKTOP		= 1
endif
ifeq "$(DOCNAME)" "Global_File_System"
SPEC_NAME	= $(DOCNAME)
DESKTOP		= 1
endif
ifeq "$(DOCNAME)" "Cluster_Administration"
SPEC_NAME	= $(DOCNAME)
DESKTOP		= 1
endif
endif

pre::
	@if [[ "$(PRODUCT)" == "Documentation" ]]; then \
		echo "ERROR! You MUST set a valid PRODUCT to use the RedHat Brand!"; \
		exit 3; \
	fi

############## OLD way (Single SRPM) to do XML desktop packages ######################
old_spec:: xml-all
	@echo "START: $@ `date`"
	@rm -f tmp/subpackages.txt tmp/titles.txt tmp/changelog.txt
	# Make the change log
	rev_file=`grep -l revhistory $(XML_LANG)/* | sed -e 's/$(XML_LANG)\///g'`; \
		$(CATALOGS) $(XSLTPROC) $(COMMON_CONFIG)/xsl/RedHat/changelog.xsl tmp/$(XML_LANG)/xml/$$rev_file > tmp/changelog.txt
	@echo
	# make the translated titles
	for lang in $(TRANSLATIONS); do \
		$(CATALOGS) $(XSLTPROC) --nonet --stringparam book-lang $$lang $(COMMON_CONFIG)/xsl/RedHat/subtitle.xsl tmp/$$lang/xml/$(DOC_TYPE)_Info.xml >> tmp/titles.txt; \
	done;
	@echo
	# make the sub packages
	for lang in $(OTHER_LANGS); do \
		$(CATALOGS) $(XSLTPROC) --nonet --stringparam book-title "$(SPEC_NAME)" \
		--stringparam book-lang $(XML_LANG) \
		--stringparam trans-lang $$lang \
		$(COMMON_CONFIG)/xsl/RedHat/sub_package_xml.xsl tmp/$$lang/xml/$(DOC_TYPE)_Info.xml >> tmp/subpackages.txt; \
	done;
	@echo
	# make the main spec file
	$(CATALOGS) $(XSLTPROC) --nonet --path "$(PWD)" --stringparam book-title "$(SPEC_NAME)" \
	--stringparam main-file "$(DOCNAME).xml" \
	--stringparam book-lang "$(XML_LANG)" \
	--stringparam lang-list "$(TRANSLATIONS)" \
	--stringparam titles "$$(<tmp/titles.txt)" \
	--stringparam book-log "$$(<tmp/changelog.txt)" \
	-o tmp/$(SPEC_NAME).spec \
	$(COMMON_CONFIG)/xsl/RedHat/dt_batch_xml_xpec.xsl tmp/$(XML_LANG)/xml/$(DOC_TYPE)_Info.xml
	@echo
	perl -p -i -e '$$foo = `cat tmp/subpackages.txt`; s/\@\@\@SUBPACKAGES\@\@\@/$$foo/g' tmp/$(SPEC_NAME).spec
	@echo "END: $@ `date`"

old_srpm:: clean old_spec
	@echo "START: $@ `date`"
	@mkdir -p tmp/rpm/SPECS tmp/rpm/SOURCES tmp/rpm/SRPMS tmp/tar/$(SPEC_NAME)-$(VERSION)
	for lang in $(TRANSLATIONS); do \
		cp -rf tmp/$$lang/xml tmp/tar/$(SPEC_NAME)-$(VERSION)/$$lang; \
	done
	cd tmp/tar && tar -cz --exclude-from=$(COMMON_CONFIG)/make/tar-excludes -f $(SPEC_NAME)-$(VERSION).tgz $(SPEC_NAME)-$(VERSION);
	@cp tmp/tar/$(SPEC_NAME)-$(VERSION).tgz tmp/rpm/SOURCES/.
	@rpmbuild --define "_topdir $(PWD)/tmp/rpm" -bs tmp/$(SPEC_NAME).spec
	@echo "END: $@ `date`"

#######################################################################################
############## OLD way (Single SRPM) to do HTML desktop packages ######################

old_spec2:: html-single-all
	@echo "START: $@ `date`"
	@rm -f tmp/subpackages.txt tmp/titles.txt tmp/changelog.txt
	# Make the change log
	rev_file=`grep -l revhistory $(XML_LANG)/* | sed -e 's/$(XML_LANG)\///g'`; \
		$(CATALOGS) $(XSLTPROC) $(COMMON_CONFIG)/xsl/RedHat/changelog.xsl tmp/$(XML_LANG)/xml/$$rev_file > tmp/changelog.txt
	@echo
	# make the sub packages 
	for lang in $(OTHER_LANGS); do \
		$(CATALOGS) $(XSLTPROC) --nonet --stringparam book-title "$(SPEC_NAME)" \
		--stringparam trans-lang $$lang \
		$(COMMON_CONFIG)/xsl/RedHat/sub_package_html.xsl tmp/$$lang/xml/$(DOC_TYPE)_Info.xml >> tmp/subpackages.txt; \
	done;
	@echo
	# make the main spec file
	$(CATALOGS) $(XSLTPROC) --nonet --path "$(PWD)" --stringparam book-title "$(SPEC_NAME)" \
	--stringparam main-file "$(DOCNAME).xml" \
	--stringparam lang-list "$(TRANSLATIONS)" \
	--stringparam book-lang "$(XML_LANG)" \
	--stringparam book-log "$$(<tmp/changelog.txt)" \
	-o tmp/$(SPEC_NAME).spec \
	$(COMMON_CONFIG)/xsl/RedHat/dt_batch_htmlsingle.xsl tmp/$(XML_LANG)/xml/$(DOC_TYPE)_Info.xml
	@echo
	perl -p -i -e '$$foo = `cat tmp/subpackages.txt`; s/\@\@\@SUBPACKAGES\@\@\@/$$foo/g' tmp/$(SPEC_NAME).spec
	@echo "END: $@ `date`"

old_srpm2:: clean old_spec2
	@echo "START: $@ `date`"
	@mkdir -p tmp/rpm/SPECS tmp/rpm/SOURCES tmp/rpm/SRPMS tmp/tar/$(SPEC_NAME)-$(VERSION)
	for lang in $(TRANSLATIONS); do \
		cp -rf tmp/$$lang/html-single tmp/tar/$(SPEC_NAME)-$(VERSION)/$$lang; \
	done
	cd tmp/tar && tar -cz --exclude-from=$(COMMON_CONFIG)/make/tar-excludes -f $(SPEC_NAME)-$(VERSION).tgz $(SPEC_NAME)-$(VERSION);
	@cp tmp/tar/$(SPEC_NAME)-$(VERSION).tgz tmp/rpm/SOURCES/.
	@rpmbuild --define "_topdir $(PWD)/tmp/rpm" -bs tmp/$(SPEC_NAME).spec
	@echo "END: $@ `date`"

